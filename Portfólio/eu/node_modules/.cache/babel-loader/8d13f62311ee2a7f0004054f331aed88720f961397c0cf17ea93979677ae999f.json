{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pichau\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portfolio\\\\Portf\\xF3lio\\\\eu\\\\src\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport './Navbar.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Switch() {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n\n  // Função para alternar o estado do switch\n  const handleToggle = e => {\n    setIsChecked(e.target.checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"btn-tema\",\n        type: \"checkbox\",\n        role: \"switch\",\n        checked: isChecked,\n        onChange: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isChecked ? 'Modo Escuro' : 'Modo Claro'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Switch, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n_c = Switch;\nexport default Switch;\nvar _c;\n$RefreshReg$(_c, \"Switch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Switch","_s","isChecked","setIsChecked","handleToggle","e","target","checked","children","name","type","role","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pichau/OneDrive/Documentos/GitHub/Portfolio/Portfólio/eu/src/Navbar.js"],"sourcesContent":["import './Navbar.css'\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction Switch() {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  // Função para alternar o estado do switch\r\n  const handleToggle = (e) => {\r\n    setIsChecked(e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input\r\n          name=\"btn-tema\"\r\n          type=\"checkbox\"\r\n          role=\"switch\"\r\n          checked={isChecked}\r\n          onChange={handleToggle}\r\n        />\r\n        <span>{isChecked ? 'Modo Escuro' : 'Modo Claro'}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Switch;\r\n"],"mappings":";;AAAA,OAAO,cAAc;AAErB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1BF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EAChC,CAAC;EAED,oBACER,OAAA;IAAAS,QAAA,eACET,OAAA;MAAAS,QAAA,gBACET,OAAA;QACEU,IAAI,EAAC,UAAU;QACfC,IAAI,EAAC,UAAU;QACfC,IAAI,EAAC,QAAQ;QACbJ,OAAO,EAAEL,SAAU;QACnBU,QAAQ,EAAER;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFjB,OAAA;QAAAS,QAAA,EAAON,SAAS,GAAG,aAAa,GAAG;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACf,EAAA,CAtBQD,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AAwBf,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}